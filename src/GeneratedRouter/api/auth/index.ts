/* eslint-disable */
// tslint:disable
/**
 * Objects API
 * API for managing objects
 *
 * OpenAPI spec version: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator+.
 * https://github.com/karlvr/openapi-generator-plus
 * Do not edit the class manually.
 */

import { Express } from "express";
// import passport from "passport";
import * as t from "./types";
import * as v from "../../validation";
// import { Api } from "../../models";

export default function (app: Express, impl: t.AuthApi) {
  app.post("/auth/token", function (req, res) {
    try {
      function __body() {
        const __contentType = req.get("Content-Type");
        const __mimeType = __contentType
          ? __contentType.replace(/;.*/, "")
          : undefined;

        if (__mimeType === "application/json") {
          return v.modelApiAuthCredentialsFromJson("body", req.body);
        }
        console.error(`Invalid request content type: ${__contentType}`);
        throw new Error(`Invalid request content type: ${__contentType}`);
      }

      impl
        .postAuthToken(__body())
        .then(function (response) {
          if (response.status === 200) {
            let body: any;
            try {
              body = v.modelApiApiKeyToJson("response", response.body);
            } catch (error) {
              console.error(
                "Invalid response body in auth.postAuthToken",
                error
              );
              res.status(500);
              res.send();
              return;
            }

            res.status(200);
            res.send(body);
            return;
          }
          if (response.status === 401) {
            let body: any;
            try {
              body = v.modelApiErrorToJson("response", response.body);
            } catch (error) {
              console.error(
                "Invalid response body in auth.postAuthToken",
                error
              );
              res.status(500);
              res.send();
              return;
            }

            res.status(401);
            res.send(body);
            return;
          }

          console.log("Unsupported response in auth.postAuthToken", response);
          res.status(500);
          res.send();
        })
        .catch(function (error) {
          console.error(
            "Unexpected error in auth.postAuthToken",
            error.stack || error
          );
          res.status(500);
          res.send();
        });
    } catch (error) {
      /* Catch validation errors */
      res.status(400);
      res.send(error);
    }
  });
}


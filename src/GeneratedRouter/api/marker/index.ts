/* eslint-disable */
// tslint:disable
/**
 * Objects API
 * API for managing objects
 *
 * OpenAPI spec version: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator+.
 * https://github.com/karlvr/openapi-generator-plus
 * Do not edit the class manually.
 */

import { Express } from "express";
// import passport from "passport";
import connectEnsureLogin from "connect-ensure-login";
import * as t from "./types";
import * as v from "../../validation";
// import { Api } from "../../models";

const ensureLoggedIn = connectEnsureLogin.ensureLoggedIn();
// passport.authenticate("OAuth2", {})

export default function (app: Express, impl: t.MarkerApi) {
  app.get("/marker", ensureLoggedIn, function (req, res) {
    try {
      const __user = req.user;
      if (!__user) {
        res.status(401);
        res.send();
        return;
      }
      impl
        .getMarker(__user)
        .then(function (response) {
          if (response.status === 200) {
            let body: any;
            try {
              body = v.arrayToJson(v.modelApiMarkerToJson)(
                "response",
                response.body
              );
            } catch (error) {
              console.error("Invalid response body in marker.getMarker", error);
              res.status(500);
              res.send();
              return;
            }

            res.status(200);
            res.send(body);
            return;
          }

          console.log("Unsupported response in marker.getMarker", response);
          res.status(500);
          res.send();
        })
        .catch(function (error) {
          console.error(
            "Unexpected error in marker.getMarker",
            error.stack || error
          );
          res.status(500);
          res.send();
        });
    } catch (error) {
      /* Catch validation errors */
      res.status(400);
      res.send(error);
    }
  });

  app.post("/marker", ensureLoggedIn, function (req, res) {
    try {
      const __user = req.user;
      if (!__user) {
        res.status(401);
        res.send();
        return;
      }
      function __body() {
        const __contentType = req.get("Content-Type");
        const __mimeType = __contentType
          ? __contentType.replace(/;.*/, "")
          : undefined;

        if (__mimeType === "application/json") {
          return v.modelApiMarkerFromJson("body", req.body);
        }
        console.error(`Invalid request content type: ${__contentType}`);
        throw new Error(`Invalid request content type: ${__contentType}`);
      }

      impl
        .postMarker(__body(), __user)
        .then(function (response) {
          if (response.status === 201) {
            let body: any;
            try {
              body = v.modelApiMarkerToJson("response", response.body);
            } catch (error) {
              console.error(
                "Invalid response body in marker.postMarker",
                error
              );
              res.status(500);
              res.send();
              return;
            }

            res.status(201);
            res.send(body);
            return;
          }

          console.log("Unsupported response in marker.postMarker", response);
          res.status(500);
          res.send();
        })
        .catch(function (error) {
          console.error(
            "Unexpected error in marker.postMarker",
            error.stack || error
          );
          res.status(500);
          res.send();
        });
    } catch (error) {
      /* Catch validation errors */
      res.status(400);
      res.send(error);
    }
  });
}

